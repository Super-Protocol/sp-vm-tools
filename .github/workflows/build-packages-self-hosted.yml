name: Build packages self-hosted

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: "Select build type"
        required: true
        default: "BOTH"
        type: choice
        options:
          - TDX
          - SNP
          - BOTH

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Clean workspace completely
        run: |
          echo "Cleaning workspace: ${{ github.workspace }}"
          
          sudo pkill -f "sp-vm-tools" || true
          sudo pkill -f "build" || true
          sleep 2
          
          sudo umount ${{ github.workspace }}/build/snp/* 2>/dev/null || true
          sudo umount ${{ github.workspace }}/build/* 2>/dev/null || true
          
          sudo chmod -R 777 ${{ github.workspace }} 2>/dev/null || true
          sudo rm -rf ${{ github.workspace }}/* 2>/dev/null || true
          sudo rm -rf ${{ github.workspace }}/.git 2>/dev/null || true
          sudo rm -rf ${{ github.workspace }}/.* 2>/dev/null || true
          
          ls -la ${{ github.workspace }} || true
      
      - name: Checkout repository with submodules
        uses: actions/checkout@v4
        with:
          clean: false
          submodules: recursive
          
      - name: Set build type and runner ID
        id: set-build-type
        run: | 
          echo "BUILD_TYPE=${{ github.event.inputs.build_type }}" >> $GITHUB_ENV
          echo "RUNNER_ID=${{ github.run_number }}" >> $GITHUB_ENV
        
      - name: Run TDX docker build
        if: ${{ github.event.inputs.build_type == 'TDX' || github.event.inputs.build_type == 'BOTH' }}
        run: |
          NON_INTERACTIVE=1 FORCE_REBUILD_CONTAINER=1 ./build_in_docker.sh tdx
          
      - name: Run SNP docker build
        if: ${{ github.event.inputs.build_type == 'SNP' || github.event.inputs.build_type == 'BOTH' }}
        run: |
          NON_INTERACTIVE=1 FORCE_REBUILD_CONTAINER=1 ./build_in_docker.sh snp
          
      - name: Fix file permissions after build
        if: always()
        run: |
          sudo chown -R gh-runner:gh-runner ${{ github.workspace }} || true
          sudo chmod -R u+w ${{ github.workspace }} || true

      - name: Set release name
        id: release-name
        run: |
          if [[ "${BUILD_TYPE}" == "BOTH" ]]; then
            echo "RELEASE_NAME=${RUNNER_ID}-tdx+snp" >> $GITHUB_ENV
          elif [[ "${BUILD_TYPE}" == "TDX" ]]; then
            echo "RELEASE_NAME=${RUNNER_ID}-tdx" >> $GITHUB_ENV
          elif [[ "${BUILD_TYPE}" == "SNP" ]]; then
            echo "RELEASE_NAME=${RUNNER_ID}-snp" >> $GITHUB_ENV
          else
            echo "Error: Unknown BUILD_TYPE ${BUILD_TYPE}" >&2
            exit 1
          fi

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        with:
          tag_name: "${{ env.RELEASE_NAME }}"
          release_name: "Release ${{ env.RELEASE_NAME }}"
          draft: false
          prerelease: true

      - name: Upload TDX Release Asset
        if: ${{ github.event.inputs.build_type == 'TDX' || github.event.inputs.build_type == 'BOTH' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/tdx/package-tdx.tar.gz
          asset_name: package-tdx.tar.gz
          asset_content_type: application/gzip
      
      - name: Upload SNP Release Asset
        if: ${{ github.event.inputs.build_type == 'SNP' || github.event.inputs.build_type == 'BOTH' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/snp/package-snp.tar.gz
          asset_name: package-snp.tar.gz
          asset_content_type: application/gzip
