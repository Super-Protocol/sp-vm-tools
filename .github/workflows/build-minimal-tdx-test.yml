name: Build TDX Test Image

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Release version (format v1.2.3)"
        required: true
        
jobs:
  build-image:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install required packages
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-utils cloud-image-utils qemu-system-x86

    - name: Download Ubuntu 24.04 minimal cloud image
      run: |
        wget https://cloud-images.ubuntu.com/minimal/daily/noble/current/noble-minimal-cloudimg-amd64.img

    - name: Create cloud-init config
      run: |
        cat << EOF > cloud-init.cfg
        #cloud-config
        users:
          - name: ubuntu
            sudo: ALL=(ALL) NOPASSWD:ALL
            shell: /bin/bash
            # password is 'ubuntu'
            passwd: "\$6\$xyz\$UFYRcqZP2PvQKDIdaPm9f6sVXnMBKTK0y3.PpPYoKXhCO2UcBE.Tr2Q9kDB3cStKY32.0wkw0BgFQgSjMIqsK0"
            lock_passwd: false
            
        packages:
          - software-properties-common
          - build-essential
          
        package_update: true
        package_upgrade: true
        
        apt:
          sources:
            tdx-attestation:
              source: "ppa:tdx-attestation-release"

        runcmd:
          - apt-get install -y --allow-downgrades libtdx-attest-dev trustauthority-cli
          - cd /usr/share/doc/libtdx-attest-dev/examples/ && make

        # Enable password authentication for SSH
        ssh_pwauth: true
        
        # Only include necessary cloud-init modules
        cloud_init_modules:
         - migrator
         - bootcmd
         - write-files
         - growpart
         - resizefs
         - set_hostname
         - update_hostname
         - update_etc_hosts
         - users-groups
         - ssh
        EOF

    - name: Create cloud-init ISO
      run: |
        cloud-localds cloud-init-${{ github.event.inputs.release_version }}.iso cloud-init.cfg

    - name: Prepare VM image
      run: |
        # Convert base image to qcow2 format and resize
        qemu-img convert -O qcow2 noble-minimal-cloudimg-amd64.img tdx-test-${{ github.event.inputs.release_version }}.qcow2
        qemu-img resize tdx-test-${{ github.event.inputs.release_version }}.qcow2 +5G

    # Create GitHub release
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.release_version }}
        release_name: "TDX Test Image ${{ github.event.inputs.release_version }}"
        draft: false
        prerelease: false
        body: |
          TDX test image based on Ubuntu 24.04 minimal
          
          Components:
          - Base: noble-minimal-cloudimg-amd64
          - Cloud-init configuration for TDX setup
          - Image size: base + 5GB
          
          Usage:
          1. Download both .qcow2 and .iso files
          2. Use them together to start the VM
          3. First boot will install TDX components
          
          Credentials:
          - Login: ubuntu
          - Password: ubuntu

    # Upload VM image
    - name: Upload VM Image
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./tdx-test-${{ github.event.inputs.release_version }}.qcow2
        asset_name: tdx-test-${{ github.event.inputs.release_version }}.qcow2
        asset_content_type: application/octet-stream

    # Upload cloud-init ISO
    - name: Upload Cloud-Init ISO
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./cloud-init-${{ github.event.inputs.release_version }}.iso
        asset_name: cloud-init-${{ github.event.inputs.release_version }}.iso
        asset_content_type: application/x-iso9660-image
